getwd()
install.packages("leaflet")
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
library(leaflet)
m <- leaflet("New York City") %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
library(leaflet)
m <- leaflet("New York City") %>%
m  # Print the map
library(leaflet)
m <- leaflet("New York City")
m  # Print the map
library(leaflet)
m <- leaflet("New York City") %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=40.8291, lat=-90.321, popup="The birthplace of R")
m  # Print the map
library(leaflet)
m <- leaflet("New York City") %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-90.321, lat=40.31, popup="The birthplace of R")
m  # Print the map
install.packages("shinydashboard")
shiny::runApp('Shiny app')
install.packages(cowsay)
install.packages("cowsay")
library(cowsay)
install.packages("fortune")
library(fortunes)
say(what = "yoda")
say(what = "fortune")
say(what = "fortune", by = "yoda")
library(multicolor)
install.packages("multicolor")
say(what = "fortune", by = "yoda", by_color = "saddlebrown")
say(what = "fortune", by = "yoda", by_color = "green")
say(what = "fortune", by = "yoda", by_color = "skyblue")
say(what = "fortune", by = "yoda", by_color = "green")
say('Q: What do you call a solitary shark\nA: A lone shark', by='shark')
say("The Power of the Plane
A crucial point when interpreting the channel rankings in Fig- ure 5.6 is that the spatial position channels apply only to planar spatial position, not arbitrary 3D position.
Vertical and horizontal position are combined into the shared category of planar because the differences between the up–down and side-to-side axes are relatively subtle. We do perceive height differences along the up–down axis as more important than hor- izontal position differences, no doubt due to the physical effects of gravity in real life. While the vertical spatial channel thus has a slight priority over the horizontal one, the aspect ratio of stan- dard displays gives more horizontal pixels than vertical ones, so information density considerations sometimes override this con- cern. For the perceived importance of items ordered within the axes, reading conventions probably dominate. Most Western lan- guages go from left to right and from top to bottom, but Arabic and Hebrew are read from right to left, and some Asian languages are read vertically.", by = "cat", by_color = "green")
install.packages("crayon")
install.packages("crayon")
library(crayon)
say("The Power of the Plane
A crucial point when interpreting the channel rankings in Fig- ure 5.6 is that the spatial position channels apply only to planar spatial position, not arbitrary 3D position.
Vertical and horizontal position are combined into the shared category of planar because the differences between the up–down and side-to-side axes are relatively subtle. We do perceive height differences along the up–down axis as more important than hor- izontal position differences, no doubt due to the physical effects of gravity in real life. While the vertical spatial channel thus has a slight priority over the horizontal one, the aspect ratio of stan- dard displays gives more horizontal pixels than vertical ones, so information density considerations sometimes override this con- cern. For the perceived importance of items ordered within the axes, reading conventions probably dominate. Most Western lan- guages go from left to right and from top to bottom, but Arabic and Hebrew are read from right to left, and some Asian languages are read vertically.", by = "cat", what_color = bgBlue$cyan$italic, by_color = "green")
say("The Power of the Plane
A crucial point when interpreting the channel rankings in Fig- ure 5.6 is that the spatial position channels apply only to planar spatial position, not arbitrary 3D position.
Vertical and horizontal position are combined into the shared category of planar because the differences between the up–down and side-to-side axes are relatively subtle. We do perceive height differences along the up–down axis as more important than hor- izontal position differences, no doubt due to the physical effects of gravity in real life. While the vertical spatial channel thus has a slight priority over the horizontal one, the aspect ratio of stan- dard displays gives more horizontal pixels than vertical ones, so information density considerations sometimes override this con- cern. For the perceived importance of items ordered within the axes, reading conventions probably dominate. Most Western lan- guages go from left to right and from top to bottom, but Arabic and Hebrew are read from right to left, and some Asian languages are read vertically.(Munzner &amp; Maguire, Visualization Analysis &amp; Design 2015) ", by = "cat", what_color = bgBlue$cyan$italic, by_color = "green")
library(cowsay)
library(crayon)
Vertical and horizontal position are combined into the shared category of planar because the differences between the up–down and side-to-side axes are relatively subtle. We do perceive height differences along the up–down axis as more important than hor- izontal position differences, no doubt due to the physical effects of gravity in real life. While the vertical spatial channel thus has a slight priority over the horizontal one, the aspect ratio of stan- dard displays gives more horizontal pixels than vertical ones, so information density considerations sometimes override this con- cern. For the perceived importance of items ordered within the axes, reading conventions probably dominate. Most Western lan- guages go from left to right and from top to bottom, but Arabic and Hebrew are read from right to left, and some Asian languages are read vertically.(Munzner &amp; Maguire, Visualization Analysis &amp; Design 2015) ", by = "cat", what_color = bgBlue$cyan$italic, by_color = "green")
say("Vertical and horizontal position are combined into the shared category of planar because the differences between the up–down and side-to-side axes are relatively subtle. We do perceive height differences along the up–down axis as more important than hor- izontal position differences, no doubt due to the physical effects of gravity in real life. While the vertical spatial channel thus has a slight priority over the horizontal one, the aspect ratio of stan- dard displays gives more horizontal pixels than vertical ones, so information density considerations sometimes override this con- cern. For the perceived importance of items ordered within the axes, reading conventions probably dominate. Most Western lan- guages go from left to right and from top to bottom, but Arabic and Hebrew are read from right to left, and some Asian languages are read vertically.(Munzner &amp; Maguire, Visualization Analysis &amp; Design 2015) ", by = "cat", what_color = bgBlue$cyan$italic, by_color = "green")
say("Power of the plane: Vertical and horizontal position are combined into the shared category of planar because the differences between the up–down and side-to-side axes are relatively subtle. We do perceive height differences along the up–down axis as more important than hor- izontal position differences, no doubt due to the physical effects of gravity in real life. While the vertical spatial channel thus has a slight priority over the horizontal one, the aspect ratio of stan- dard displays gives more horizontal pixels than vertical ones, so information density considerations sometimes override this con- cern. For the perceived importance of items ordered within the axes, reading conventions probably dominate. Most Western lan- guages go from left to right and from top to bottom, but Arabic and Hebrew are read from right to left, and some Asian languages are read vertically.(Munzner &amp; Maguire, Visualization Analysis &amp; Design 2015) ", by = "cat", crayon::bgYellow("Power of the plane"), by_color = "green")
say("Power of the plane: Vertical and horizontal position are combined into the shared category of planar because the differences between the up–down and side-to-side axes are relatively subtle. We do perceive height differences along the up–down axis as more important than hor- izontal position differences, no doubt due to the physical effects of gravity in real life. While the vertical spatial channel thus has a slight priority over the horizontal one, the aspect ratio of stan- dard displays gives more horizontal pixels than vertical ones, so information density considerations sometimes override this con- cern. For the perceived importance of items ordered within the axes, reading conventions probably dominate. Most Western lan- guages go from left to right and from top to bottom, but Arabic and Hebrew are read from right to left, and some Asian languages are read vertically.(Munzner &amp; Maguire, Visualization Analysis &amp; Design 2015) ", by = "cat", crayon::bgYellow("Power of the plane"), by_color = "green")
say('Q: What zoom ratio do you want?\nA: Street level', by='shark')
shiny::runApp('Shiny app')
devtools::install_github("zachcp/nycmaps")
install.packages("zachcp/nycmaps")
# nyc.map <- get_map(location = 'New York',
#                    maptype='roadmap', color='color',source='google', zoom = zm())
nyc <- map_data("nyc")
runApp('Shiny app')
install.packages("nycmaps")
runApp('Shiny app')
runApp('Shiny app')
library(maps)
map_data("county")
head(map_data("county"))
head(map_data("world"))
head(map_data("UK"))
head(map_data("Italy"))
head(map_data("states"))
head(map_data("state"))
shiny::runApp('new_app')
head(map_data("state"))
str("state")
str(map_data("state"))
str(uber)
uber <- read_csv("uber.csv", na = ".")
str(uber)
spec()
str(state)
is_tibble(uber)
is_tibble(map_data("state"))
library(leaflet)
# Note: if you do not already installed it, install it with:
# install.packages("leaflet")
# Initialize the leaflet map with the leaflet() function
m <- leaflet()
# Then we Add default OpenStreetMap map tiles
m <- addTiles(m)
m
# Same stuff but using the %>% operator
m <- leaflet() %>%
addTiles()
m
library(leaflet)
m <- leaflet() %>%
addTiles() %>%
setView( lng = 166.45, lat = -22.25, zoom = 8 )
m
